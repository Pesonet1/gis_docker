version: "3"

services:
  dev-nginx:
    build:
      context: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./client/public:/usr/share/nginx/html
    depends_on:
      - dev-client
      - dev-server
      - dev-mapproxy
      - dev-geoserver
      - dev-nominatim

  dev-client:
    build:
      context: ./client
    ports:
      - 8082:8082

  dev-server:
    build:
      context: ./server
    ports:
      - 8085:8085
    depends_on:
      - dev-database

  dev-database:
    image: kartoza/postgis:12.0
    restart: always
    environment:
      POSTGRES_DBNAME: gis
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,pgrouting
      ALLOW_IP_RANGE: 0.0.0.0/0
    volumes:
      - postgres_data:/var/lib/postgresql
      # Uncomment this to allow initial sql scripts to be run on initial db setup
      # - ./database/setup-db.sql:/docker-entrypoint-initdb.d/setup-db.sql
    ports:
      - 5435:5432

  dev-geoserver:
    image: oscarfonts/geoserver
    ports:
      - 8080:8080
    volumes:
      - ./geoserver/data_dir:/var/local/geoserver
      - ./geoserver/exts_dir:/var/local/geoserver-exts/
    depends_on:
      - dev-database

  dev-mapproxy:
    build:
      context: ./mapproxy
    volumes:
      - ./mapproxy:/mapproxy

  # mapproxy-seed:
  #   build:
  #     context: ./mapproxy
  #   command: /bin/sh -c "seed.sh"
  #   volumes:
  #     - ./mapproxy:/mapproxy
  #   depends-on:
  #     - dev-mapproxy

  dev-nominatim:
    build:
      context: ./nominatim
    ports:
      - 7070:8100
    volumes:
      - ./nominatim:/nominatim
    command: /bin/sh -c "/app/startapache.sh"
    depends_on:
      - dev-database
      # - nominatim-initialization

  # nominatim-initialization:
  #   build:
  #     context: ./nominatim
  #   volumes:
  #     - ./nominatim:/nominatim
  #   command: >
  #     sh -c "/app/setup-database &&
  #            /app/init.sh"
  #   depends_on:
  #     - dev-database

volumes:
  postgres_data:
